name: Build and Deploy - Mulesoft

on:
  push:
    branches: [ Irfaan-dev1 ]
  pull_request:
    branches: [ Irfaan-dev1 ]

environment: preprod
env:
    DEPLOYMENTTIMEOUT: ${{ vars.DEPLOYMENTTIMEOUT }}
    ENVIRONMENT: ${{ vars.ENVIRONMENT }}
    MULEVERSION: ${{ vars.MULEVERSION }}
    RELEASECHANNEL: ${{ vars.RELEASECHANNEL }}
    REPLICAS: ${{ vars.REPLICAS }}
    TARGET: ${{ vars.TARGET }}
    VCORES: ${{ vars.VCORES }}
    ANYPOINT_CONNECTED_APP_ID: ${{ secrets.ANYPOINT_CONNECTED_APP_ID }}
    ANYPOINT_CONNECTED_APP_SECRET: ${{ secrets.ANYPOINT_CONNECTED_APP_SECRET }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Print environment variables
        run: |
            echo "DEPLOYMENTTIMEOUT is $DEPLOYMENTTIMEOUT"
            echo "ENVIRONMENT is $ENVIRONMENT"
            echo "MULEVERSION is $MULEVERSION"
            echo "RELEASECHANNEL is $RELEASECHANNEL"
            echo "REPLICAS is $REPLICAS"
            echo "TARGET is $TARGET"
            echo "VCORES is $VCORES"
            echo "ANYPOINT_CONNECTED_APP_ID is $ANYPOINT_CONNECTED_APP_ID"
            echo "ANYPOINT_CONNECTED_APP_SECRET is $ANYPOINT_CONNECTED_APP_SECRET"

      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 8
      - name: Build with Maven

        run: mvn -B package --file pom.xml
      - name: Stamp artifact file name with commit hash

        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1 $artifactName2
          
      - name: Upload artifact 
        uses: actions/upload-artifact@v4
        with:
            name: artifacts
            path: target/*.jar       
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v4
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v4
      with: 
          name: artifacts    
    - name: Publishing to Exchange
      env:  ${{ env.ENVIRONMENT }}
      run: | 
        artifactName=$(ls *.jar | head -1)
        mvn clean deploy --settings .maven/settings.xml -DskipMunitTests \
        -Dclient.id="$ANYPOINT_CONNECTED_APP_ID" \
        -Dclient.secret="$ANYPOINT_CONNECTED_APP_SECRET"
    - name: Maven Deploy to Cloudhub 2.0
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn clean deploy -DmuleDeploy --settings .maven/settings.xml -DskipMunitTests \
           -Dclient.id="$ANYPOINT_CONNECTED_APP_ID" \
           -Dclient.secret="$ANYPOINT_CONNECTED_APP_SECRET" \
           -DdeploymentTimeout="$DEPLOYMENTTIMEOUT" \
           -Denvironment="$ENVIRONMENT" \
           -Dmule.version="$MULEVERSION" \
           -DreleaseChannel="$RELEASECHANNEL" \
           -Dreplicas="$REPLICAS" \
           -Dtarget="$TARGET" \
           -DvCores="$VCORES"
      timeout-minutes: 30